http {
    upstream backend {
        server {{load_balancer_ip}}:80;    
        server {{backend_server_ip}}:80;
        keepalive 32;
}

# The server block defines a virtual server that will listen for incoming cleint requests


server {
    listen 80;
    # HTTP requests on port 80 will be handled by the server block
    # The location block specifies how to process the request of pattern
    # (/) This means that all requests will be handled by the location block
    location / {
        proxy_pass http://backend;                            # Above line tells to forrward the request to the backend upstream
        proxy_http_version 1.1;                               # The proxy_http_version directive sets the HTTP version to 1.1
        proxy_set_header Connection "";                       # These set various HTTP headers that will be sent to the backend server along with requests.
        proxy_set_header Host $host;                          # This helps in understanding important information about the client request
        proxy_set_header X-Real-IP $remote_addr;                                # clears the connection header to prevent the "Connection: close" header from being sent to the backend server
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            # The X-Real-IP header is used to pass the client's IP address to the backend server
        proxy_set_header X-Forwarded-Proto $scheme;
                                                                                # The X-Forwarded-For header is used to pass the client's IP address to the backend server
                                                                                # The X-Forwarded-Proto header is used to pass the client's IP address to the backend serveR    
    }
}
