global
  log 20.51.125.161 local0 # this tells haproxy to log to the syslog server
  maxconn 200 # this sets the maximum number of connections to 200

defaults   # this sets the default parameters for all other sections
  log global
  option httplog
  option dontlognull
  timeout connect 5000ms
  timeout client 50000ms  
  timeout server 50000ms

frontend http-in # it is the entry point for all incoming requests
    bind *:80
    default_backend servers # it tells haproxy to use the servers backend by default

backend http-out # it is the backend that will be used to send requests to the backend servers
    balance roundrobin # it tells haproxy to use the roundrobin algorithm to balance the load
    option httpchk HEAD / HTTP/1.0 # it tells haproxy to use the HTTP HEAD method to check if the server is up
    server load_balancer '{{ load_balancer_ip }}':80 check # it tells haproxy to use the load balancer server
    server backend_server '{{ backend_server_ip }}':80 check # it tells haproxy to use the backend server
global
  log 20.51.125.161 local0 # this tells haproxy to log to the syslog server
  maxconn 200 # this sets the maximum number of connections to 200

defaults   # this sets the default parameters for all other sections
  log global
  option httplog
  option dontlognull
  timeout connect 5000ms
  timeout client 50000ms  
  timeout server 50000ms

frontend http-in # it is the entry point for all incoming requests
    bind *:80
    default_backend servers # it tells haproxy to use the servers backend by default

backend http-out # it is the backend that will be used to send requests to the backend servers
    balance roundrobin # it tells haproxy to use the roundrobin algorithm to balance the load
    option httpchk HEAD / HTTP/1.0 # it tells haproxy to use the HTTP HEAD method to check if the server is up
    server load_balancer '{{ load_balancer_ip }}':80 check # it tells haproxy to use the load balancer server
    server backend_server '{{ backend_server_ip }}':80 check # it tells haproxy to use the backend server
